
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://bykgpwwagvxxbrpubxbz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ5a2dwd3dhZ3Z4eGJycHVieGJ6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMxMzQzNzIsImV4cCI6MjA1ODcxMDM3Mn0.osNLuzpyY9jC8NFL9U7AW7kbcrZDGGshnJ4roxs3zcM";

// Configure Supabase client with proper auth settings
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true, // Detect session from URL hash
    flowType: 'pkce' // Use PKCE flow for secure auth
  }
});

// Create an admin user if needed
(async function initializeDatabase() {
  try {
    // Check if admin exists
    const { data: adminExists } = await supabase
      .from('profiles')
      .select('id')
      .eq('role', 'admin')
      .maybeSingle();

    if (!adminExists) {
      console.log("No admin found, attempting to create admin user");
      
      // Create admin user
      const { data: userData, error: signupError } = await supabase.auth.signUp({
        email: 'admin@example.com',
        password: 'password123',
        options: {
          data: {
            first_name: 'Admin',
            last_name: 'User',
          }
        }
      });

      if (signupError) {
        console.error("Failed to create admin user:", signupError);
      } else {
        console.log("Admin user created successfully");
        
        if (userData?.user?.id) {
          // Update profile role to admin
          const { error: updateError } = await supabase
            .from('profiles')
            .update({ role: 'admin' })
            .eq('id', userData.user.id);
            
          if (updateError) {
            console.error("Failed to update admin role:", updateError);
          } else {
            console.log("Admin role assigned successfully");
          }
        }
      }
    } else {
      console.log("Admin user already exists");
    }
  } catch (error) {
    console.error("Error during database initialization:", error);
  }
})();

// For debugging purposes
console.log("Supabase client initialized with URL:", SUPABASE_URL);
